import unittest

from mode_operation import encrypt, decrypt


class TestOperatorMode(unittest.TestCase):

    def test_encrypt_ecb(self):
        txt = "Un message secret que personne ne doit lire sauf toi ;-)"
        expected = [110754240720012525258828815870222990281, 139675155146894280829118289779622086138,
                    66591502227653969011769995377961101545, 267730272879788106442758980191606333383,
                    269457615084807651862990667718220059102, 83484251422747171169264274953632210099,
                    83484251422747171169264274953632210099, 172634914289197641512479877871072162441,
                    14887000787365564428826482989182386898, 269457615084807651862990667718220059102,
                    66591502227653969011769995377961101545, 83484251422747171169264274953632210099,
                    269457615084807651862990667718220059102, 11361264977334335007558616878823140859,
                    225138088983263655200948962088688701051, 269457615084807651862990667718220059102,
                    101583710851837410115896438702777244540, 66591502227653969011769995377961101545,
                    276570498493825624464572580236671184441, 273717941691217787852435060469630778627,
                    269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                    37731770909280726022188745432464469193, 269457615084807651862990667718220059102,
                    225138088983263655200948962088688701051, 83484251422747171169264274953632210099,
                    21425090107841073985194183758445710473, 139675155146894280829118289779622086138,
                    139675155146894280829118289779622086138, 269457615084807651862990667718220059102,
                    66591502227653969011769995377961101545, 139675155146894280829118289779622086138,
                    269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                    181717521570720024563984175282092239751, 21425090107841073985194183758445710473,
                    11185968605119393903013785436120336422, 101583710851837410115896438702777244540,
                    66591502227653969011769995377961101545, 153405257070096940765375877261414395752,
                    11185968605119393903013785436120336422, 225138088983263655200948962088688701051,
                    269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                    83484251422747171169264274953632210099, 172634914289197641512479877871072162441,
                    273717941691217787852435060469630778627, 318714543382488791051375047600683142183,
                    66591502227653969011769995377961101545, 101583710851837410115896438702777244540,
                    21425090107841073985194183758445710473, 11185968605119393903013785436120336422,
                    66591502227653969011769995377961101545, 208114640819362463657192215345664659396,
                    329326528551963756917089182728016710412, 246054157448536941894216403024979802907]
        key = 59175378448483159366830979133373343628532096962263744739244943153083052201664
        cipher = encrypt(bytearray(txt, 'utf-8'), key, "ECB")
        assert cipher == expected

    def test_decrypt_ecb(self):
        txt = "Un message secret que personne ne doit lire sauf toi ;-)"
        expected = bytearray(txt, 'utf-8')
        cipher = [110754240720012525258828815870222990281, 139675155146894280829118289779622086138,
                  66591502227653969011769995377961101545, 267730272879788106442758980191606333383,
                  269457615084807651862990667718220059102, 83484251422747171169264274953632210099,
                  83484251422747171169264274953632210099, 172634914289197641512479877871072162441,
                  14887000787365564428826482989182386898, 269457615084807651862990667718220059102,
                  66591502227653969011769995377961101545, 83484251422747171169264274953632210099,
                  269457615084807651862990667718220059102, 11361264977334335007558616878823140859,
                  225138088983263655200948962088688701051, 269457615084807651862990667718220059102,
                  101583710851837410115896438702777244540, 66591502227653969011769995377961101545,
                  276570498493825624464572580236671184441, 273717941691217787852435060469630778627,
                  269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                  37731770909280726022188745432464469193, 269457615084807651862990667718220059102,
                  225138088983263655200948962088688701051, 83484251422747171169264274953632210099,
                  21425090107841073985194183758445710473, 139675155146894280829118289779622086138,
                  139675155146894280829118289779622086138, 269457615084807651862990667718220059102,
                  66591502227653969011769995377961101545, 139675155146894280829118289779622086138,
                  269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                  181717521570720024563984175282092239751, 21425090107841073985194183758445710473,
                  11185968605119393903013785436120336422, 101583710851837410115896438702777244540,
                  66591502227653969011769995377961101545, 153405257070096940765375877261414395752,
                  11185968605119393903013785436120336422, 225138088983263655200948962088688701051,
                  269457615084807651862990667718220059102, 66591502227653969011769995377961101545,
                  83484251422747171169264274953632210099, 172634914289197641512479877871072162441,
                  273717941691217787852435060469630778627, 318714543382488791051375047600683142183,
                  66591502227653969011769995377961101545, 101583710851837410115896438702777244540,
                  21425090107841073985194183758445710473, 11185968605119393903013785436120336422,
                  66591502227653969011769995377961101545, 208114640819362463657192215345664659396,
                  329326528551963756917089182728016710412, 246054157448536941894216403024979802907]
        key = 59175378448483159366830979133373343628532096962263744739244943153083052201664
        message = decrypt(cipher, key, "ECB")
        assert expected == bytes(message)

    def test_encrypt_cbc(self):
        txt = "Un message secret que personne ne doit lire sauf toi ;-)"
        key = 59175378448483159366830979133373343628532096962263744739244943153083052201664
        cipher = encrypt(bytearray(txt, 'utf-8'), key, "CBC")
        message = decrypt(cipher, key, "CBC")
        assert txt == str(bytes(message), 'utf-8')

    def test_decrypt_cbc(self):
        txt = ("Es-tu capable de décoder correctement ce message ? Si tu lis ceci, c'est que la réponse est oui... "
               "Ceci est un exemple de message totalement inutile !")
        expected = bytearray(txt, 'utf-8')
        cipher = [229812406910754622705329195568575238785, 250803163711434548366605235919211999431,
                  301809623156173522019920630340971431027, 208881671879821999087006557648685635345,
                  36013514959706779414591016057607509144, 50524532277093378808577296726932769591,
                  49175152443955614718912257917249926142, 173620665296848308441196702765241331234,
                  92810878039765750054367922275011377853, 143908268177451368709805915813851441896,
                  124974543019009088390614938657092387256, 101835779723333462309016770880126512706,
                  328247520520620071589414768372415822641, 215025099937863849237171568217431387762,
                  15601400898182397940804677834608383885, 42875284367189368905804496322033098264,
                  88113256535680107991412430819134868771, 303142013907303972383765078369181686368,
                  223507970262736104618195090343200892629, 303718983009473256514262688385581658522,
                  174613810138009433525985543742061094604, 252745879757554394880070088593501750573,
                  282226731856077571307469780277725028872, 212205717818744761046319616526904589791,
                  105265202833759444466828535284040199346, 322249956375927720779373604723661989417,
                  34566798094516343434113382008363067748, 16529946306881821870203328666243693128,
                  139614107512915319936248873397368345898, 308522685963917366080477308424114187473,
                  202259001339119826520750447550645731786, 46823457654095667331064318149214765303,
                  304362304774179379027276847963319310593, 310285724433984962182826115661048121100,
                  61977511195063305545640932305480609473, 302253834902071015005222029488255463528,
                  255748633907967506198425262289755439522, 134679335929958019356416162089978558849,
                  337994425516736801230510089039215334936, 230108926801705489521112691898821638464,
                  127321577063266759714535756474056478453, 14795199665063865731064481756601830460,
                  206790177631987541441637036890459114161, 167136852175960022662628583127040439718,
                  80360073675078148062844486777474397651, 255146673976998720462623906815050638844,
                  308626209083149201797587339114472049212, 128421479788885545707482816073265884213,
                  80357266125934426313181821878666518914, 96273402128161563285642041671803824789,
                  48014728977779762361709235121097541613, 93355618775164691433634080341745205589,
                  147182630478394576003892756560418318637, 202821401391362639450790364480480600025,
                  48707855232438863608002579342787765242, 84140910210854877535164422500367138332,
                  160857932679410241997471084698830443452, 77255785906793107975362393074133626462,
                  84771878685311279136300930328997419322, 193700485028470779340306918597488855519,
                  280257920623270094548527749543377201799, 140756868911257460929288534415073699162,
                  337423047358288043553865754616156161389, 337754664654347383783883446735353431773,
                  5828491652241016055825458664630715149, 284532874021656584395435660314458736790,
                  148878661269537161645631625296865295861, 136459470220415378361261300112281284886,
                  139571934337433981773189552908638211441, 189744093544758427567080283552059340382,
                  168803502603172526669260302077281183949, 216428445264072348883788807754459788058,
                  289376796016904580965756982420060458758, 314242116327715698251760246145393201105,
                  268946284452139654047838649277907157147, 191392244344199209130509862240838961411,
                  96484222349732400006552729503089286637, 221685834197022390228548790900108909308,
                  108207780573694811879054541392769036755, 75352774795134195776201023351101539866,
                  110123036565719877997489500819331478919, 108339896096451638943550466351165319524,
                  94429942413654552818850146369538339043, 130727122869998553278670743817896993153,
                  280056869403190898512711067831882012235, 177891579411655890494463770599545005111,
                  206640407995850361738663388806180064078, 139532561701730800225377152448722288868,
                  301045882640331955825861889047257286806, 102853049410060238038172559766549493019,
                  305800970105701883105905096324758973280, 259888390594264562756852148591865334155,
                  214711065029581738050901531251667119970, 68960324735737056133777513876500116602,
                  259699363752756760019527900291441454085, 14921421317986603611991839141723080330,
                  192133630521697855755401558590230998637, 89845690995337698548132482749650813731,
                  247225781448411419028207294909190432545, 224830518909752323324467595951203345068,
                  62654980790266691530088891775161302970, 90078048473338380632033833854557296257,
                  213558927801293429021060217629681579813, 331280783334787622969630050975493518184,
                  17153171049701333110457879046808484799, 199944744791249730116796542433659124917,
                  49727129582182859281344001267728913199, 267971425016484852031706826654085007382,
                  176016413215356386914038653581391993829, 27160414193159924400125848460467211446,
                  5034192066517836795263368100474848382, 39963935454846826888810769236983283007,
                  55380204582635539225263904402056231931, 195349467974019445171438593446160587791,
                  294851432866446871547830717331662092326, 228357851208172812477718406614399164473,
                  125658483471972734368711416953403119000, 251434728125561794975763102368006678161,
                  195657651161205272183930292362364545583, 66756127967227405624788867563231587126,
                  65471193041790942005244425529710417831, 225741044876639988129420281453528472625,
                  217118607407043365600778575313362993132, 141254824242236515903415081351653033457,
                  303803986052267682784694625424631914998, 299857224940832617183008526383991729504,
                  34119659403627841983549874832066974499, 183503923634043503034007925911754466223,
                  233746008148471429091517356392743653744, 278123859204468000732269219165554120887,
                  109037336973142493971485663656883960682, 65666447027746360593734154508986868229,
                  160071049831880256390642784241374430664, 3152170765250754036270263213628002668,
                  26518572349491390563647920197991556770, 149382167743838067704709119275985965807,
                  129743661629611971758505523842437191804, 274602359070131993795632276782216419300,
                  21644186989191789386024884271716373730, 41972896565814824516853578450284262138,
                  314625865779602659232413181111466245824, 173379665790990679890995787111807230317,
                  86628906673229954408267323239010537066, 115072648243133029748621607032707785379,
                  72261087082606280036785478302227306263, 253057140273476567603611278477055164779,
                  333845510470122719803815281567255901887, 294721698306714438166427460451384074111,
                  251976210494713678310308531198511429582, 334195689052876887735726220699884566863,
                  58747440190111549284803715071487229925, 206931454474747950652793280615000200520,
                  205774703505969075086715144935065842540]
        key = 2074038311066901704458280453016374652262928663593769232443771776310965583625
        message = decrypt(cipher, key, "CBC")
        assert expected == bytes(message)
